[gd_scene load_steps=5 format=2]

[ext_resource path="res://scenes/ui/magnify_screen.gd" type="Script" id=1]
[ext_resource path="res://assets/images/white_rect_10x10.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
/*
adapted from
https://godotforums.org/discussion/20570/magnifying-glass-shader-for-godot-3
*/
uniform vec2 mag_pos = vec2(0.0, 0.0);
uniform float aspect_ratios = 1.0;
vec2 zoom_point(vec2 uv, vec2 point, float zoom)
{
    return (uv - point) / zoom + point;
}

void fragment()
{
	
    vec2 uv = SCREEN_UV;
    float lens_radius = 0.08;
    float mag_dist = distance(uv*vec2(1.0, aspect_ratios), mag_pos*vec2(1.0, aspect_ratios));
    if (mag_dist < lens_radius)
    {
        float zoom = 2.0;
        vec2 zoomed = zoom_point(uv, mag_pos, zoom);
        COLOR = vec4(texture(SCREEN_TEXTURE, zoomed).rgb, 1.0);
    }
	/*
    else if (mag_dist < lens_radius + 0.004)
    {
        COLOR = vec4(0.0, 0.0, 0.0, 1.0);
    }
	*/
    else
    {
       discard;
    }
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/mag_pos = Vector2( 0, 0 )
shader_param/aspect_ratios = 1.0

[node name="MagnifyScreen" type="TextureRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
texture = ExtResource( 2 )
expand = true
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
